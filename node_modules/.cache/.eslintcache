[{"/Users/seongwookang/Projects/untitled/frontend/todo/src/index.js":"1","/Users/seongwookang/Projects/untitled/frontend/todo/src/App.js":"2","/Users/seongwookang/Projects/untitled/frontend/todo/src/reportWebVitals.js":"3","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/PlanDashboard.js":"4","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/TimerDashboard/TimerDashboard.js":"5","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/BranchTable.js":"6","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/ToggleableBranchForm.js":"7","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/TimerDashboard/Timer/Timer.js":"8","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Branch.js":"9","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/TimerDashboard/Timer/timerHelper.js":"10","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/TimerDashboard/TimerButtons/TimerButtons.js":"11","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Goal/GoalForm.js":"12","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/UI/Input/Input.js":"13","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/UI/Button/Button.js":"14","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Goal/editableGoal.js":"15","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/IntermediateList.js":"16","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Buttons/Buttons.js":"17","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Goal/Goal.js":"18","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/EditableIntermediate.js":"19","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/ToggleableIntermediateForm.js":"20","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/Intermediate.js":"21","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/IntermediateForm.js":"22","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/Toolbar/Toolbar.js":"23","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/NavigationItems/NavigationItem.js":"24","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/Header/Header.js":"25","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/Login/Login.js":"26","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/Signup/Signup.js":"27","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/NavigationItems/LeftItems.js":"28","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/NavigationItems/RightItems.js":"29","/Users/seongwookang/Projects/untitled/frontend/todo/src/axiosConfig.js":"30"},{"size":591,"mtime":1618087646383,"results":"31","hashOfConfig":"32"},{"size":708,"mtime":1618108841613,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1614765198566,"results":"34","hashOfConfig":"32"},{"size":6505,"mtime":1618100181924,"results":"35","hashOfConfig":"32"},{"size":755,"mtime":1616708018079,"results":"36","hashOfConfig":"32"},{"size":1053,"mtime":1618085972120,"results":"37","hashOfConfig":"32"},{"size":842,"mtime":1615019902603,"results":"38","hashOfConfig":"32"},{"size":3324,"mtime":1616708016296,"results":"39","hashOfConfig":"32"},{"size":1867,"mtime":1615862454579,"results":"40","hashOfConfig":"32"},{"size":757,"mtime":1615842760963,"results":"41","hashOfConfig":"32"},{"size":851,"mtime":1615864077860,"results":"42","hashOfConfig":"32"},{"size":1157,"mtime":1615832781013,"results":"43","hashOfConfig":"32"},{"size":1630,"mtime":1617660458192,"results":"44","hashOfConfig":"32"},{"size":337,"mtime":1617666646764,"results":"45","hashOfConfig":"32"},{"size":1000,"mtime":1615749819601,"results":"46","hashOfConfig":"32"},{"size":1200,"mtime":1618085615576,"results":"47","hashOfConfig":"32"},{"size":636,"mtime":1615832503304,"results":"48","hashOfConfig":"32"},{"size":1064,"mtime":1615832602752,"results":"49","hashOfConfig":"32"},{"size":1305,"mtime":1618082178831,"results":"50","hashOfConfig":"32"},{"size":1024,"mtime":1618082215447,"results":"51","hashOfConfig":"32"},{"size":1705,"mtime":1618082178481,"results":"52","hashOfConfig":"32"},{"size":1304,"mtime":1618082179213,"results":"53","hashOfConfig":"32"},{"size":485,"mtime":1617843481829,"results":"54","hashOfConfig":"32"},{"size":344,"mtime":1617843032622,"results":"55","hashOfConfig":"32"},{"size":185,"mtime":1617652312814,"results":"56","hashOfConfig":"32"},{"size":3882,"mtime":1617666637469,"results":"57","hashOfConfig":"32"},{"size":4750,"mtime":1617841880371,"results":"58","hashOfConfig":"32"},{"size":369,"mtime":1617843413962,"results":"59","hashOfConfig":"32"},{"size":300,"mtime":1617843449334,"results":"60","hashOfConfig":"32"},{"size":195,"mtime":1618087744372,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1140lj8",{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seongwookang/Projects/untitled/frontend/todo/src/index.js",[],"/Users/seongwookang/Projects/untitled/frontend/todo/src/App.js",["143","144"],"/Users/seongwookang/Projects/untitled/frontend/todo/src/reportWebVitals.js",[],["145","146"],"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/PlanDashboard.js",["147","148","149","150"],"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/TimerDashboard/TimerDashboard.js",["151"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Timer from './Timer/Timer';\n\nclass TimerDashboard extends Component {\n  state = {\n    title:this.props.title,\n    goalId:this.props.goalId,\n    intermediateId: this.props.intermediateId,\n    timeSpent: 0,\n  };\n\n  render(){\n\n    return(\n      <div>\n        <h2 className=\"ui center aligned icon header\">\n          <i className=\"stopwatch icon\"></i>\n          {this.state.title}\n        </h2>\n\n        <Timer\n          closeTimer={this.props.closeTimer}\n          goalId={this.state.goalId}\n          intermediateId={this.state.intermediateId}\n          updateTimeSpent={this.props.updateTimeSpent}\n\n          />\n      </div>\n\n    );\n  }\n\n}\nexport default TimerDashboard;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/BranchTable.js",["152"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Branch from './Branch'\nimport ToggleableBranchForm from './ToggleableBranchForm'\n\nclass BranchTable extends Component{\n  render(){\n\n    const branches = this.props.goals.map((goal)=>(\n      <div\n        className='column'>\n        <Branch\n          key = {goal.id}\n          goalId = {goal.id}\n          title = {goal.title}\n          intermediates={goal.intermediates}\n\n\n          deleteGoal={this.props.deleteGoal}\n          updateGoal={this.props.updateGoal}\n          deleteIntermediate={this.props.deleteIntermediate}\n          updateIntermediate={this.props.updateIntermediate}\n          openTimer={this.props.openTimer}\n\n          addIntermediate={this.props.addIntermediate}\n          />\n      </div>\n    ));\n\n    return(\n      <div className='ui three column centered grid'>\n          {branches}\n          <ToggleableBranchForm\n            handleCreateBranch={this.props.handleCreateBranch}\n          />\n      </div>\n    );\n  }\n}\n\nexport default BranchTable;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/ToggleableBranchForm.js",["153"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GoalForm from './Goal/GoalForm';\nclass ToggleableBranchForm extends Component {\n  state={\n    isClicked:false,\n  }\n\n  handleFormOpen =()=>{\n    this.setState({isClicked:true});\n  }\n  handleFormClose=()=>{\n    this.setState({isClicked:false});\n  }\n\n  render(){\n    const toRender= this.state.isClicked ?\n          <GoalForm\n            handleSubmit={this.props.handleCreateBranch}\n            handleFormClose={this.handleFormClose}\n            />:\n          <div className='ui basic segment center aligned'>\n            <i\n              className=\"large plus square icon\"\n              onClick={this.handleFormOpen}\n              />\n          </div>\n\n    return(\n      <div>\n        {toRender}\n      </div>\n    );\n  }\n}\n\nexport default ToggleableBranchForm;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/TimerDashboard/Timer/Timer.js",["154","155"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { renderRemainingString,millisecondsToHuman } from './timerHelper'\n\nimport TimerButtons from '../TimerButtons/TimerButtons'\n\nclass Timer extends Component {\n  state={\n    total: 3000,\n    elapsed:0,\n    isStarted:false,\n\n    title:'this.props.title',\n    goalId: this.props.goalId,\n    intermediateId: this.props.intermediateId\n  }\n\n  componentDidMount =()=>{\n    document.addEventListener(\"keydown\", this.handleArrowKeyDown);\n    this.forceUpdateInterval = setInterval(() => this.forceUpdate(), 50);\n  }\n\n  componentWillUnmount =()=>{\n    document.removeEventListener('keydown',this.handleArrowKeyDown);\n    clearInterval(this.forceUpdateInterval);\n  }\n\n  handleArrowKeyDown=(e)=>{\n    switch (e.keyCode) {\n        case 38: //up\n          this.increase5Min();\n          break;\n        case 40: //down\n          this.decrease5Min();\n          break;\n        case 13: //enter\n          this.startTimer();\n          break;\n        case 32: //spac\n          console.log('space')\n          this.stopTimer();\n          break;\n    }\n  }\n\n  increase5Min=()=>{\n    if (!this.state.isStarted){\n        this.setState({total:this.state.total+300000});\n    }\n  }\n\n  decrease5Min=()=>{\n    if (!this.state.isStarted){\n      if ((this.state.total-300000) >= 600000){\n          this.setState({total:this.state.total-300000});\n      }else{\n        this.setState({total:600000});\n      }\n    }\n\n  }\n\n  startTimer=()=>{\n    if(!this.state.isStarted){\n      this.setState({\n        runningSince:Date.now(),\n        isStarted:true,\n      });\n    }\n  }\n\n  cancelTimer = () =>{\n    this.setState((prevState)=>{\n      return {\n        total: prevState.total,\n        isCompleted:false,\n        elapsed:0,\n        isStarted:false,\n      }\n    });\n  }\n\n\n  handleTimerDone=()=>{\n    console.log('handletimer done')\n\n    this.setState({isStarted:false});\n    this.props.updateTimeSpent({\n      timeSpent:this.state.total,\n      goalId: this.state.goalId,\n      intermediateId: this.state.intermediateId\n    })\n  }\n\n\n  render(){\n    const remaining = this.state.isStarted ? renderRemainingString(\n          this.state.elapsed, this.state.runningSince, this.state.total\n        ) : millisecondsToHuman(this.state.total - this.state.elapsed);\n\n    if (remaining === '00:00:00' & !this.state.isCompleted){\n      this.handleTimerDone()\n    }\n\n\n\n    const rem = Date.now() - this.state.runningSince;\n\n    let button = null;\n    if (!this.state.isStarted){\n      button =  <TimerButtons\n        onButtonClick={this.startTimer}\n        onBackCilick={this.props.closeTimer}\n\n        label = {'start'}\n        isStarted={this.state.isStarted}\n        color = {\"green\"}\n      />\n    } else {\n      button = (rem) < 10000 ?  <TimerButtons\n        onButtonClick={this.cancelTimer}\n        onBackCilick={this.props.closeTimer}\n\n        label = {'Cancel Within'}\n        isStarted={this.state.isStarted}\n        color = {\"red\"}\n        rem={rem}\n      />: null;\n    }\n\n    return(\n      <div className='ui two column centered grid'\n      >\n        <div className='column'>\n          <h1\n            style={{fontSize:\"100px\", textAlign:\"center\"}}\n          >\n            {remaining}\n          </h1>\n          {button}\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Timer;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Branch.js",["156"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport EditableGoal from './Goal/editableGoal'\nimport IntermediateList from './Intermediates/IntermediateList'\n\n\nclass Branch extends Component{\n  state={\n    goalUpdate:false,\n    intermediateUpdate:false,\n    isEditing:false,\n  }\n\n  handleDeleteClick=()=>{\n    this.props.deleteGoal(this.props.goalId)\n  }\n\n  handleEditClick=()=>{\n    this.setState({isEditing:!this.state.isEditing});\n  }\n\n\n\n  render(){\n    const editClass=[]\n\n    if (this.state.isEditing){\n      editClass.push('check icon')\n    }else{\n      editClass.push('edit icon')\n    }\n\n    const toRender=\n      <div>\n        <h3>\n        <i\n          onClick={this.handleEditClick}\n          className={editClass.join(' ')} />\n        <i\n          onClick={this.handleDeleteClick}\n          className='trash alternate icon' />\n        </h3>\n        <div className='ui center aligned'>\n          <EditableGoal\n              goalId = {this.props.goalId}\n              title = {this.props.title}\n              isEditing= {this.state.isEditing}\n\n              deleteGoal={this.props.deleteGoal}\n              updateGoal={this.props.updateGoal}\n            />\n        </div>\n\n        <div className='ui basic segment'>\n\n          <IntermediateList\n            goalId={this.props.goalId}\n            intermediates = {this.props.intermediates}\n            isEditing={this.state.isEditing}\n\n\n            addIntermediate={this.props.addIntermediate}\n            deleteIntermediate={this.props.deleteIntermediate}\n            updateIntermediate={this.props.updateIntermediate}\n            openTimer={this.props.openTimer}\n\n          />\n        </div>\n      </div>\n    ;\n\n    return(\n        <div className='ui raised segment'>\n          <div>\n            {toRender}\n          </div>\n\n        </div>\n    );\n  }\n}\n\nexport default Branch;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/TimerDashboard/Timer/timerHelper.js",[],"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/TimerDashboard/TimerButtons/TimerButtons.js",["157"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass TimerButtons extends Component {\n\n  handleStart=()=>{\n    this.props.onButtonClick()\n  }\n\n  handleBack=()=>{\n    this.props.onBackCilick()\n  }\n\n  render() {\n    const color = this.props.color\n    const classes=['fluid','ui','button',color]\n    const seconds = this.props.rem ? Math.floor(10 - (this.props.rem / 1000) % 60) : '';\n\n    const back = !this.props.isStarted ?\n    <div\n      className=\"ui left floated button\"\n      onClick={this.handleBack}\n    >\n    Back\n    </div> : null;\n\n    return (\n      <React.Fragment>\n        {back}\n        <div\n          onClick={this.handleStart}\n          className= {classes.join(' ')}\n        >\n          {this.props.label + ' ' +seconds}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TimerButtons;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Goal/GoalForm.js",["158"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Buttons from '../Buttons/Buttons'\n\nclass GoalForm extends Component {\n  state={\n    goalId:this.props.goalId || '',\n    title: this.props.title || '',\n  };\n\n  handleTitleChange=(e)=>{\n    this.setState({title:e.target.value});\n  };\n\n  handleSubmitOnClick=()=>{\n    this.props.handleSubmit({\n      ...this.state\n    });\n    this.props.handleFormClose();\n  };\n\n\n  render(){\n    const green = this.props.goalId ?'Update':'Start!'\n    return(\n      <div className='ui centered card'>\n        <div className='ui content'>\n          <div className='ui form'>\n            <div className='field'>\n              <label>Title</label>\n              <input\n                type='text'\n                placeholder={\"Let's do this\"}\n                onChange={this.handleTitleChange}\n                />\n            </div>\n\n          </div>\n        </div>\n        <Buttons\n          onGreenClick={this.handleSubmitOnClick}\n          onRedClick={this.props.handleFormClose}\n          green={green}\n          red={'NeverMind'}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GoalForm;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/UI/Input/Input.js",["159"],"import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = ['field'];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        console.log('invalid')\n        inputClasses.push('error');\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={inputClasses.join(' ')}>\n            <label>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n};\n\nexport default input;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/UI/Button/Button.js",[],"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Goal/editableGoal.js",["160"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Goal from './Goal'\nimport GoalForm from './GoalForm'\n\nclass EditableGoal extends Component {\n  state={\n    isOpen:false\n  }\n\n  handleCloseForm=()=>{\n    this.closeForm();\n  }\n\n  handeOpenForm=()=>{\n    this.openForm();\n  }\n\n  openForm =()=>{\n    this.setState({isOpen:true});\n  }\n\n  closeForm=()=>{\n    this.setState({isOpen:false});\n  }\n\n\n  render(){\n\n\n    const toRender= this.state.isOpen ?\n      <GoalForm\n        goalId={this.props.goalId}\n        title={this.props.title}\n        handleSubmit={this.props.updateGoal}\n        handleFormClose={this.handleCloseForm}\n      />:\n\n      <Goal\n        goalId={this.props.goalId}\n        title={this.props.title}\n        deleteGoal={this.props.deleteGoal}\n        openForm={this.handeOpenForm}\n        isEditing={this.props.isEditing}\n\n      />\n    return(\n      <React.Fragment>\n        {toRender}\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default EditableGoal;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/IntermediateList.js",["161","162"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Intermediate from './Intermediate'\nimport ToggleableIntermediateForm from './ToggleableIntermediateForm'\nimport EditableIntermediate from './EditableIntermediate'\n\n\nclass IntermediateList extends Component{\n  render(){\n    const intermediates = []\n\n    if (this.props.intermediates){\n      intermediates.push(this.props.intermediates.map((intermediate)=>(\n        <EditableIntermediate\n          key = {this.props.goalId +intermediate.id}\n          goalId={this.props.goalId}\n          intermediateId = {intermediate.id}\n          title={intermediate.title}\n          isEditing={this.props.isEditing}\n          timeSpent={intermediate.timeSpent}\n\n          deleteIntermediate={this.props.deleteIntermediate}\n          updateIntermediate={this.props.updateIntermediate}\n          openTimer={this.props.openTimer}\n          />\n      )));\n    }\n\n    return(\n      <React.Fragment>\n        {intermediates}\n        <ToggleableIntermediateForm\n          goalId={this.props.goalId}\n          addIntermediate={this.props.addIntermediate}\n          />\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default IntermediateList;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Buttons/Buttons.js",["163","164","165"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nclass Buttons extends Component {\n  render() {\n\n    return (\n      <div className='ui two bottom attached fluid buttons'>\n\n        <div\n          className='ui green basic button'\n          onClick={this.props.onGreenClick}\n        >\n        {this.props.green}\n        </div>\n        <div\n          className='ui red basic button'\n          onClick={this.props.onRedClick}\n        >\n        {this.props.red}\n        </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default Buttons;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Goal/Goal.js",["166"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Buttons from '../Buttons/Buttons';\n\nclass Goal extends Component {\n  state={\n    title:''\n  }\n\n  handleDeleteClick=()=>{\n    this.props.deleteGoal(this.props.goalId)\n  }\n\n  handleUpdateClick=()=>{\n    this.props.openForm();\n  }\n\n\n  render(){\n    const buttons = this.props.isEditing ?\n                    <Buttons\n                      onGreenClick={this.handleUpdateClick}\n                      onRedClick={this.handleDeleteClick}\n                      green={'Edit'}\n                      red={'Delete'}\n                      /> : null;\n    const color =['ui','fluid','card']\n    if (!this.props.isEditing){\n      color.push('green')\n    }\n    return(\n      <React.Fragment>\n        <div className={color.join(' ')}>\n          <div className='content'>\n\n            <div className='ui center aligned'>\n              <h1>{this.props.title}</h1>\n            </div>\n\n          </div>\n          {buttons}\n        </div>\n      </React.Fragment>\n\n    );\n  }\n}\n\n\nexport default Goal;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/EditableIntermediate.js",["167"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport IntermediateForm from './IntermediateForm'\nimport Intermediate from './Intermediate'\n\nclass EditableIntermediate extends Component {\n  state={\n    isOpen:false,\n  };\n\n  handleCloseForm=()=>{\n    this.closeForm();\n  };\n\n  handeOpenForm=()=>{\n    this.openForm();\n  };\n\n  openForm =()=>{\n    console.log('openform')\n    this.setState({isOpen:true});\n  };\n\n  closeForm=()=>{\n    this.setState({isOpen:false});\n  };\n\n  render(){\n    const toRender = this.state.isOpen ?\n      <IntermediateForm\n        goalId={this.props.goalId}\n        intermediateId={this.props.intermediateId}\n        title={this.props.title}\n        handleSubmit={this.props.updateIntermediate}\n        handleFormClose={this.handleCloseForm}\n      />:\n\n      <Intermediate\n        goalId={this.props.goalId}\n        intermediateId={this.props.intermediateId}\n        title={this.props.title}\n        deleteIntermediate={this.props.deleteIntermediate}\n        openForm={this.handeOpenForm}\n        isEditing={this.props.isEditing}\n        openTimer={this.props.openTimer}\n        timeSpent={this.props.timeSpent}\n      />;\n\n    return(\n      <React.Fragment>\n        {toRender}\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default EditableIntermediate;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/ToggleableIntermediateForm.js",["168"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport IntermediateForm from './IntermediateForm'\n\n\nclass ToggleableIntermediateForm extends Component{\n  state={\n    isClicked:false,\n  }\n\n  handleFormOpen =()=>{\n    this.setState({isClicked:true});\n  }\n  handleFormClose=()=>{\n    this.setState({isClicked:false});\n  }\n\n\n  render(){\n      const toRender= this.state.isClicked ?\n            <div>\n              <IntermediateForm\n                goalId={this.props.goalId}\n                handleFormClose={this.handleFormClose}\n                handleSubmit={this.props.addIntermediate}\n                />\n            </div>:\n            <div className='ui basic segment center aligned'>\n              <i\n                className=\"large plus square outline icon\"\n                onClick={this.handleFormOpen}\n                />\n            </div>\n      return(\n        <div className='ui column'>\n          {toRender}\n        </div>\n      );\n    }\n  }\n\nexport default ToggleableIntermediateForm;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/Intermediate.js",["169","170"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Buttons from '../Buttons/Buttons';\n\nimport { Link } from 'react-router-dom';\n\nclass Intermediate extends Component {\n  state={\n    goalId: this.props.goalId,\n    intermediateId: this.props.intermediateId,\n    title:this.props.title,\n    timeSpent:this.props.timeSpent,\n  };\n\n  handleOnClick=()=>{\n      this.props.openTimer(this.state)\n  }\n\n\n  handleDeleteClick=()=>{\n    this.props.deleteIntermediate(this.state)\n  };\n\n  handleUpdateClick=()=>{\n    console.log('asdf')\n    this.props.openForm();\n  };\n\n  render(){\n    const buttons= this.props.isEditing ? <Buttons\n        onGreenClick={this.handleUpdateClick}\n        onRedClick={this.handleDeleteClick}\n        green={'Edit'}\n        red={'Delete'}\n        /> : null;\n\n    const color =['ui','fluid','card']\n    if (!this.props.isEditing){\n      color.push('blue')\n      color.push('link')\n    }\n\n    const handleOnClick = !this.props.isEditing ? this.handleOnClick : null;\n    const timeSpentMin = Math.floor((this.state.timeSpent / 1000 / 60) % 60)\n\n    return(\n      <React.Fragment>\n        <div\n          className={color.join(' ')}\n          onClick={handleOnClick}\n          >\n          <div className='content'>\n              <div>\n                <p\n                  style={{color:\"black\", float:\"left\"}}>\n                  {this.props.title}\n                </p>\n\n                <p\n                  style={{color:\"black\", float:\"right\"}}\n                  >\n                  {timeSpentMin}\n\n                </p>\n              </div>\n          </div>\n          {buttons}\n\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Intermediate;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/IntermediateForm.js",["171"],"import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass IntermediateForm extends Component {\n  state={\n    goalId : this.props.goalId || '',\n    intermediateId:this.props.intermediateId || '',\n    title:'',\n  };\n\n\n  handleOnChange = (e) =>{\n    this.setState({title:e.target.value});\n  };\n\n\n  handleSubmitOnClick=()=>{\n    this.props.handleSubmit({...this.state});\n    this.props.handleFormClose();\n  }\n\n  render(){\n\n    const text = this.state.intermediateId ? 'Update' :'Add';\n    return(\n      <div className='ui fluid card'>\n        <div className='ui content'>\n          <div className='ui form'>\n            <div className='field'>\n              <label>Title</label>\n              <input\n                type='text'\n                placeholder=\"Let's do this\"\n                onChange={this.handleOnChange}\n                />\n            </div>\n\n\n          </div>\n        </div>\n        <div className=\"ui two buttons\">\n          <div\n            className=\"ui basic green button\"\n            onClick={this.handleSubmitOnClick}\n            >{text}</div>\n          <div\n            className=\"ui basic red button\"\n            onClick={this.props.handleFormClose}\n            >Never Mind..</div>\n        </div>\n      </div>\n\n    );\n  }\n}\nexport default IntermediateForm;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/Toolbar/Toolbar.js",["172","173"],"import React from 'react';\n\nimport classes from './Toolbar.module.css'\nimport LeftItems from '../NavigationItems/LeftItems'\nimport RightItems from '../NavigationItems/RightItems'\n\nimport { NavLink } from 'react-router-dom';\n\nconst toolbar = ( props ) =>{\n  return(\n    <div class=\"ui secondary pointing menu\">\n      <div class=\"left menu\">\n        <LeftItems />\n      </div>\n      <div class='right menu'>\n        <RightItems />\n      </div>\n    </div>\n  );\n}\n\nexport default toolbar;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/NavigationItems/NavigationItem.js",["174"],"import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem=( props )=>{\n  return(\n    <a className='ui item'>\n      <NavLink\n        to={props.link}\n        exact={props.exact}\n        activeClassName='active'\n      >\n      {props.children}\n      </NavLink>\n    </a>\n\n\n  );\n};\n\nexport default navigationItem;\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/Header/Header.js",[],"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/Login/Login.js",["175","176"],"import React, { Component } from 'react';\n\nimport Input from '../UI/Input/Input';\nimport Button from '../UI/Button/Button';\n\nimport PropTypes from 'prop-types';\nimport { Link,Redirect } from 'react-router-dom';\n\nimport Header from '../Header/Header'\nimport Toolbar from '../Toolbar/Toolbar'\n\nclass Login extends Component {\n  state={\n    controls:{\n      email:{\n        elementType: 'input',\n        elementConfig:{\n          type: 'email',\n          placeholder: 'Email'\n        },\n        value:'',\n        validation:{\n          required:true,\n          isEmail: true,\n        },\n        valid: false,\n        touched: false\n      },\n      password:{\n        elementType: 'input',\n        elementConfig:{\n          type: 'password',\n          placeholder: 'password'\n        },\n        value:'',\n        validation:{\n          required:true,\n          minLength:6,\n        },\n        valid: false,\n        touched: false,\n      }\n    },\n    isSignup:false,\n  }\n\n  checkValidity=(value,rules)=>{\n    let isValid = true;\n\n    if ( !rules ) {\n      return true;\n    }\n\n    if (rules.required){\n      isValid = value.trim() && isValid;\n    }\n\n    if (rules.minLength){\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength){\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail){\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test( value ) && isValid\n    }\n\n    if (rules.isNumeric){\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value)&&isValid;\n    }\n    return isValid;\n  }\n\n  inputChangedHandler=(event, controlName)=>{\n    const updatedControls ={\n      ...this.state.controls,\n      [controlName]:{\n        ...this.state.controls.[controlName],\n        value: event.target.value,\n        valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n        touched:true\n      }\n    };\n\n    this.setState({controls: updatedControls});\n  }\n\n  handleSignupClick=()=>{\n    console.log('sd')\n    this.setState(prevState =>{\n      return {isSignup: !prevState.isSignup};\n    });\n  }\n\n\n\n\n  render(){\n    const formElementsArray=[];\n    for ( let key in this.state.controls){\n      formElementsArray.push({\n        id:key,\n        config:this.state.controls[key],\n      });\n    }\n\n    let form = formElementsArray.map( formElement =>(\n      <Input\n          key={formElement.id}\n          elementType={formElement.config.elementType}\n          elementConfig={formElement.config.elementConfig}\n          value={formElement.config.value}\n          invalid={!formElement.config.valid}\n          shouldValidate={formElement.config.validation}\n          touched={formElement.config.touched}\n          changed={(event)=> this.inputChangedHandler(event, formElement.id)}\n      />\n    ));\n\n\n    let loginRedirect=null;\n    if (this.state.isSignup){\n      loginRedirect = <Redirect to='/signup' />\n    }\n\n\n    return (\n      <div className='ui container'>\n        <Header />\n        <Toolbar />\n          <div className='ui three column centered grid'>\n            <div className='ui column'>\n              <div className='ui attached segment'>\n                {loginRedirect}\n                <form className='ui form' onSubmit={this.submitHandler}>\n\n                  {form}\n                  <Button\n                    btnType='green'>\n                    Login\n                  </Button>\n                </form>\n\n              </div>\n              <Button\n                btnType='bottom attached'\n                clicked={this.handleSignupClick}\n                icon='signup icon'\n              >\n                SignUp\n              </Button>\n\n            </div>\n\n          </div>\n\n\n    </div>\n\n\n\n    );\n  }\n}\nexport default Login\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/Signup/Signup.js",["177","178","179","180"],"import React, { Component } from 'react';\n\nimport Input from '../UI/Input/Input';\nimport Button from '../UI/Button/Button';\n\nimport PropTypes from 'prop-types';\nimport { Link,Redirect } from 'react-router-dom';\n\nimport Header from '../Header/Header'\nimport Toolbar from '../Toolbar/Toolbar'\n\nclass Signup extends Component {\n  state={\n    controls:{\n      email:{\n        elementType: 'input',\n        elementConfig:{\n          type: 'email',\n          placeholder: 'Email'\n        },\n        value:'',\n        validation:{\n          required:true,\n          isEmail: true,\n        },\n        valid: false,\n        touched: false\n      },\n      password:{\n        elementType: 'input',\n        elementConfig:{\n          type: 'password',\n          placeholder: 'password'\n        },\n        value:'',\n        validation:{\n          required:true,\n          minLength:6,\n          password1:true,\n        },\n        valid: false,\n        touched: false,\n      },\n      password2:{\n        elementType: 'input',\n        elementConfig:{\n          type: 'password',\n          placeholder: 'Verify Password'\n        },\n        value:'',\n        validation:{\n          required:true,\n          minLength:6,\n          verifyPassword:true,\n        },\n        valid: false,\n        touched: false,\n      }\n    },\n    isSignup:false,\n  }\n\n  checkValidity=(value,rules)=>{\n    let isValid = true;\n\n    if ( !rules ) {\n      return true;\n    }\n\n    if (rules.required){\n      isValid = value.trim() && isValid;\n    }\n\n    if (rules.minLength){\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength){\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail){\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test( value ) && isValid\n    }\n\n    if (rules.isNumeric){\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value)&&isValid;\n    }\n\n    if (rules.verifyPassword){\n      isValid = value === this.state.controls.password.value && isValid;\n    }\n\n    if(rules.password1){\n      console.log('hi')\n    }else{\n      console.log('123')\n    }\n\n\n\n\n    return isValid;\n  }\n\n  inputChangedHandler=(event, controlName)=>{\n    let updatedControls = null\n    if (controlName==='password'){\n      updatedControls ={\n        ...this.state.controls,\n        [controlName]:{\n          ...this.state.controls.[controlName],\n          value: event.target.value,\n          valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n          touched:true\n        },\n        ['password2']:{\n          ...this.state.controls['password2'],\n          valid: this.state.controls['password2'].value===event.target.value,\n        },\n\n\n      };\n      this.setState({controls: updatedControls});\n\n\n    } else {\n      updatedControls ={\n        ...this.state.controls,\n        [controlName]:{\n          ...this.state.controls[controlName],\n          value: event.target.value,\n          valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n          touched:true\n        }\n      };\n    }\n    this.setState({controls: updatedControls});\n\n  }\n\n\n  submitHandler=(event)=>{\n    event.preventDefault();\n  }\n\n\n\n  render(){\n    const formElementsArray=[];\n    let valid = true;\n\n    for ( let key in this.state.controls){\n      formElementsArray.push({\n        id:key,\n        config:this.state.controls[key],\n      });\n\n      valid = (this.state.controls[key].valid) && valid;\n    }\n\n\n    let form = formElementsArray.map( formElement =>(\n      <Input\n          key={formElement.id}\n          elementType={formElement.config.elementType}\n          elementConfig={formElement.config.elementConfig}\n          value={formElement.config.value}\n          invalid={!formElement.config.valid}\n          shouldValidate={formElement.config.validation}\n          touched={formElement.config.touched}\n          changed={(event)=> this.inputChangedHandler(event, formElement.id)}\n      />\n    ));\n\n\n    return (\n      <div className='ui container'>\n        <Header />\n        <Toolbar />\n          <div className='ui three column centered grid'>\n            <div className='ui column'>\n              <div className='ui attached segment'>\n\n                <form className='ui form' onSubmit={this.submitHandler}>\n                  {form}\n                  <Button\n                    btnType='teal'\n                    disabled={!valid}>\n                    Submit\n                  </Button>\n                </form>\n              </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Signup\n","/Users/seongwookang/Projects/untitled/frontend/todo/src/components/NavigationItems/LeftItems.js",[],"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/NavigationItems/RightItems.js",[],"/Users/seongwookang/Projects/untitled/frontend/todo/src/axiosConfig.js",[],{"ruleId":"181","severity":1,"message":"182","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":12},{"ruleId":"181","severity":1,"message":"185","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":22},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"191","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":28},{"ruleId":"192","severity":1,"message":"193","line":129,"column":35,"nodeType":"194","messageId":"195","endLine":129,"endColumn":37},{"ruleId":"192","severity":1,"message":"193","line":152,"column":35,"nodeType":"194","messageId":"195","endLine":152,"endColumn":37},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"196","severity":1,"message":"197","line":30,"column":5,"nodeType":"198","messageId":"199","endLine":44,"endColumn":6},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"200","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":15},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"201","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":20},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"202","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":14},{"ruleId":"181","severity":1,"message":"203","line":5,"column":10,"nodeType":"183","messageId":"184","endLine":5,"endColumn":14},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"203","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":14},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"200","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":15},{"ruleId":"181","severity":1,"message":"204","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":7,"column":5,"nodeType":"207","endLine":7,"endColumn":28},{"ruleId":"181","severity":1,"message":"190","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":17},{"ruleId":"181","severity":1,"message":"203","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":14},{"ruleId":"181","severity":1,"message":"190","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":17},{"ruleId":"181","severity":1,"message":"203","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":14},{"ruleId":"181","severity":1,"message":"208","line":7,"column":15,"nodeType":"183","messageId":"184","endLine":7,"endColumn":23},{"ruleId":"209","severity":1,"message":"210","line":119,"column":9,"nodeType":"211","messageId":"212","endLine":122,"endColumn":10,"fix":"213"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'TimerDashboard' is defined but never used.","no-native-reassign",["214"],"no-negated-in-lhs",["215"],"'PropTypes' is defined but never used.","'ToggleableBranchForm' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'classes' is defined but never used.","'Intermediate' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Redirect' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['password2'] found.","Property","unnecessarilyComputedProperty",{"range":"216","text":"217"},"no-global-assign","no-unsafe-negation",[2694,2707],"'password2'"]