{"ast":null,"code":"var _jsxFileName = \"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/IntermediateList.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Intermediate from './Intermediate';\nimport ToggleableIntermediateForm from './ToggleableIntermediateForm';\nimport EditableIntermediate from './EditableIntermediate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IntermediateList extends Component {\n  render() {\n    const intermediates = [];\n\n    if (this.props.intermediates) {\n      intermediates.push(this.props.intermediates.map(intermediate => /*#__PURE__*/_jsxDEV(EditableIntermediate, {\n        goalId: this.props.goalId,\n        intermediateId: intermediate.id,\n        title: intermediate.title,\n        isEditing: this.props.isEditing,\n        timeSpent: intermediate.timeSpent,\n        deleteIntermediate: this.props.deleteIntermediate,\n        updateIntermediate: this.props.updateIntermediate,\n        openTimer: this.props.openTimer\n      }, this.props.goalId.toString() + intermediate.id.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)));\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [intermediates, /*#__PURE__*/_jsxDEV(ToggleableIntermediateForm, {\n        goalId: this.props.goalId,\n        addIntermediate: this.props.addIntermediate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default IntermediateList;","map":{"version":3,"sources":["/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/IntermediateList.js"],"names":["React","Component","PropTypes","Intermediate","ToggleableIntermediateForm","EditableIntermediate","IntermediateList","render","intermediates","props","push","map","intermediate","goalId","id","title","isEditing","timeSpent","deleteIntermediate","updateIntermediate","openTimer","toString","addIntermediate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;;AAGA,MAAMC,gBAAN,SAA+BL,SAA/B,CAAwC;AACtCM,EAAAA,MAAM,GAAE;AACN,UAAMC,aAAa,GAAG,EAAtB;;AAEA,QAAI,KAAKC,KAAL,CAAWD,aAAf,EAA6B;AAC3BA,MAAAA,aAAa,CAACE,IAAd,CAAmB,KAAKD,KAAL,CAAWD,aAAX,CAAyBG,GAAzB,CAA8BC,YAAD,iBAC9C,QAAC,oBAAD;AAEE,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MAFrB;AAGE,QAAA,cAAc,EAAID,YAAY,CAACE,EAHjC;AAIE,QAAA,KAAK,EAAEF,YAAY,CAACG,KAJtB;AAKE,QAAA,SAAS,EAAE,KAAKN,KAAL,CAAWO,SALxB;AAME,QAAA,SAAS,EAAEJ,YAAY,CAACK,SAN1B;AAQE,QAAA,kBAAkB,EAAE,KAAKR,KAAL,CAAWS,kBARjC;AASE,QAAA,kBAAkB,EAAE,KAAKT,KAAL,CAAWU,kBATjC;AAUE,QAAA,SAAS,EAAE,KAAKV,KAAL,CAAWW;AAVxB,SACS,KAAKX,KAAL,CAAWI,MAAX,CAAkBQ,QAAlB,KAA6BT,YAAY,CAACE,EAAb,CAAgBO,QAAhB,EADtC;AAAA;AAAA;AAAA;AAAA,cADiB,CAAnB;AAcD;;AAED,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,iBACGb,aADH,eAEE,QAAC,0BAAD;AACE,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWI,MADrB;AAEE,QAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWa;AAF9B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA/BqC;;AAkCxC,eAAehB,gBAAf","sourcesContent":["import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Intermediate from './Intermediate'\nimport ToggleableIntermediateForm from './ToggleableIntermediateForm'\nimport EditableIntermediate from './EditableIntermediate'\n\n\nclass IntermediateList extends Component{\n  render(){\n    const intermediates = []\n\n    if (this.props.intermediates){\n      intermediates.push(this.props.intermediates.map((intermediate)=>(\n        <EditableIntermediate\n          key = {this.props.goalId.toString()+intermediate.id.toString()}\n          goalId={this.props.goalId}\n          intermediateId = {intermediate.id}\n          title={intermediate.title}\n          isEditing={this.props.isEditing}\n          timeSpent={intermediate.timeSpent}\n\n          deleteIntermediate={this.props.deleteIntermediate}\n          updateIntermediate={this.props.updateIntermediate}\n          openTimer={this.props.openTimer}\n          />\n      )));\n    }\n\n    return(\n      <React.Fragment>\n        {intermediates}\n        <ToggleableIntermediateForm\n          goalId={this.props.goalId}\n          addIntermediate={this.props.addIntermediate}\n          />\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default IntermediateList;\n"]},"metadata":{},"sourceType":"module"}