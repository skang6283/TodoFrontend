{"ast":null,"code":"var _jsxFileName = \"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/PlanDashboard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BranchTable from './Branch/BranchTable';\nimport ToggleableBranchForm from './Branch/ToggleableBranchForm';\nimport TimerDashboard from '../TimerDashboard/TimerDashboard';\nimport Header from '../Header/Header';\nimport Toolbar from '../Toolbar/Toolbar';\nimport { v4 as uuid } from \"uuid\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlanDashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      goals: [],\n      tmp: 4,\n      timerOn: false,\n      activeTitle: 0,\n      activeGoalId: 0,\n      activeIntermediateId: 0\n    };\n\n    this.deleteGoal = goalId => {\n      this.setState({\n        goals: this.state.goals.filter(goal => goal.id !== goalId)\n      });\n    };\n\n    this.updateGoal = obj => {\n      console.log('updategoal');\n      console.log(obj);\n      this.setState({\n        goals: this.state.goals.map(goal => {\n          if (goal.id === obj.goalId) {\n            return Object.assign({}, goal, {\n              title: obj.title\n            });\n          } else {\n            return goal;\n          }\n        })\n      });\n    };\n\n    this.deleteIntermediate = obj => {\n      console.log('delete');\n      console.log(obj);\n      this.setState({\n        goals: this.state.goals.map(goal => {\n          if (goal.id === obj.goalId) {\n            return Object.assign({}, goal, {\n              intermediates: goal.intermediates.filter(intermediate => intermediate.id !== obj.intermediateId)\n            });\n          } else {\n            return goal;\n          }\n        })\n      });\n    };\n\n    this.updateTimeSpent = obj => {\n      console.log('update timer');\n      console.log(obj);\n      this.setState({\n        goals: this.state.goals.map(goal => {\n          if (goal.id === obj.goalId) {\n            return Object.assign({}, goal, {\n              intermediates: goal.intermediates.map(intermediate => {\n                if (intermediate.id == obj.intermediateId) {\n                  return Object.assign({}, intermediate, {\n                    timeSpent: intermediate.timeSpent + obj.timeSpent\n                  });\n                } else {\n                  return intermediate;\n                }\n              })\n            });\n          } else {\n            return goal;\n          }\n        })\n      });\n    };\n\n    this.updateIntermediate = obj => {\n      console.log('update');\n      console.log(obj);\n      this.setState({\n        goals: this.state.goals.map(goal => {\n          if (goal.id === obj.goalId) {\n            return Object.assign({}, goal, {\n              intermediates: goal.intermediates.map(intermediate => {\n                if (intermediate.id == obj.intermediateId) {\n                  return Object.assign({}, intermediate, {\n                    title: obj.title,\n                    totalTime: obj.totalTime\n                  });\n                } else {\n                  return intermediate;\n                }\n              })\n            });\n          } else {\n            return goal;\n          }\n        })\n      });\n    };\n\n    this.createBranch = obj => {\n      this.setState({\n        tmp: this.state.tmp + 1\n      });\n      const newBranch = {\n        id: uuid(),\n        title: obj.title,\n        created_at: Date.now(),\n        intermediates: []\n      }; // this.setState({\n      //   goals:this.state.goals.concat({\n      //     id: uuid(),\n      //     title: obj.title,\n      //     created_at:Date.now(),\n      //     intermediates:[]\n      //   })\n      // });\n\n      console.log(newBranch);\n      axios.post(\"http://localhost:8000/api/v1/intermediate/\", newBranch).then(response => console.log(response)).then(response => this.callback()).catch(error => console.log(error));\n    };\n\n    this.addIntermediate = obj => {\n      console.log(this.state);\n      this.setState({\n        tmp: this.state.tmp + 1\n      });\n      const newIntermediate = {\n        goalId: obj.goalId,\n        title: obj.title,\n        totalTime: obj.totalTime,\n        timeSpent: 0\n      }; // this.setState({\n      //   goals: this.state.goals.map((goal)=>{\n      //     if (goal.id === obj.goalId){\n      //       newIntermediate={\n      //         goalId: obj.goalId,\n      //         title: obj.title,\n      //         totalTime: obj.totalTime,\n      //         timeSpent:0,\n      //       }\n      //       return Object.assign({},goal,{\n      //         intermediates: goal.intermediates.concat(newIntermediate)\n      //       });\n      //     }else{\n      //       return goal;\n      //     }\n      //   })\n      // });\n\n      axios.post(\"http://localhost:8000/api/v1/intermediate/\", newIntermediate).then(response => console.log(response)).then(response => this.callback()).catch(error => console.log(error));\n    };\n\n    this.openTimer = obj => {\n      console.log('opentimer');\n      this.setState({\n        timerOn: true,\n        activeTitle: obj.title,\n        activeGoalId: obj.goalId,\n        activeIntermediateId: obj.intermediateId\n      });\n    };\n\n    this.closeTimer = () => {\n      this.setState({\n        timerOn: false\n      });\n    };\n  }\n\n  callback() {\n    axios.get('http://127.0.0.1:8000/api/v1/goal/').then(response => {\n      this.setState({\n        goals: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    }).then(value => {\n      console.log(value, this.state);\n    }).then(v => {\n      axios.get('http://localhost:8000/api/v1/intermediate/').then(response => {\n        this.setState({\n          goals: this.state.goals.map(goal => {\n            let updatedIntermediates = [];\n\n            for (const intermediate of response.data) {\n              if (goal.id === intermediate.goalId) {\n                updatedIntermediates.push(intermediate);\n              }\n            }\n\n            const newGoal = Object.assign({}, goal, {\n              intermediates: updatedIntermediates\n            });\n            return newGoal;\n          })\n        });\n      }).catch(error => {\n        this.setState({\n          error: true\n        });\n      }).then(value => {\n        console.log(\"second\", this.state);\n      });\n    });\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:8000/api/v1/goal/').then(response => {\n      this.setState({\n        goals: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    }).then(value => {\n      console.log(value, this.state);\n    }).then(v => {\n      axios.get('http://localhost:8000/api/v1/intermediate/').then(response => {\n        this.setState({\n          goals: this.state.goals.map(goal => {\n            let updatedIntermediates = [];\n\n            for (const intermediate of response.data) {\n              if (goal.id === intermediate.goalId) {\n                updatedIntermediates.push(intermediate);\n              }\n            }\n\n            const newGoal = Object.assign({}, goal, {\n              intermediates: updatedIntermediates\n            });\n            return newGoal;\n          })\n        });\n      }).catch(error => {\n        this.setState({\n          error: true\n        });\n      }).then(value => {\n        console.log(\"second\", this.state);\n      });\n    });\n  }\n\n  render() {\n    const toRender = !this.state.timerOn ? /*#__PURE__*/_jsxDEV(BranchTable, { ...this.state,\n      deleteGoal: this.deleteGoal,\n      updateGoal: this.updateGoal,\n      deleteIntermediate: this.deleteIntermediate,\n      updateIntermediate: this.updateIntermediate,\n      openTimer: this.openTimer,\n      handleCreateBranch: this.createBranch,\n      addIntermediate: this.addIntermediate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(TimerDashboard, {\n      title: this.state.activeTitle,\n      goalId: this.state.activeGoalId,\n      intermediateId: this.state.activeIntermediateId,\n      closeTimer: this.closeTimer,\n      updateTimeSpent: this.updateTimeSpent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), toRender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PlanDashboard;","map":{"version":3,"sources":["/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/PlanDashboard.js"],"names":["React","Component","PropTypes","BranchTable","ToggleableBranchForm","TimerDashboard","Header","Toolbar","v4","uuid","axios","PlanDashboard","state","goals","tmp","timerOn","activeTitle","activeGoalId","activeIntermediateId","deleteGoal","goalId","setState","filter","goal","id","updateGoal","obj","console","log","map","Object","assign","title","deleteIntermediate","intermediates","intermediate","intermediateId","updateTimeSpent","timeSpent","updateIntermediate","totalTime","createBranch","newBranch","created_at","Date","now","post","then","response","callback","catch","error","addIntermediate","newIntermediate","openTimer","closeTimer","get","data","value","v","updatedIntermediates","push","newGoal","componentDidMount","render","toRender"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AAEA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,aAAN,SAA4BV,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCW,KADoC,GAC9B;AACJC,MAAAA,KAAK,EAAC,EADF;AAIJC,MAAAA,GAAG,EAAC,CAJA;AAKJC,MAAAA,OAAO,EAAC,KALJ;AAMJC,MAAAA,WAAW,EAAC,CANR;AAOJC,MAAAA,YAAY,EAAC,CAPT;AAQJC,MAAAA,oBAAoB,EAAC;AARjB,KAD8B;;AAAA,SAgGpCC,UAhGoC,GAgGxBC,MAAD,IAAU;AACnB,WAAKC,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBS,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAA5C;AADK,OAAd;AAGD,KApGmC;;AAAA,SAsGpCK,UAtGoC,GAsGxBC,GAAD,IAAO;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKL,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBgB,GAAjB,CAAsBN,IAAD,IAAQ;AAClC,cAAIA,IAAI,CAACC,EAAL,KAAYE,GAAG,CAACN,MAApB,EAA2B;AACzB,mBAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBR,IAAjB,EAAsB;AAC3BS,cAAAA,KAAK,EAACN,GAAG,CAACM;AADiB,aAAtB,CAAP;AAGD,WAJD,MAIK;AACH,mBAAOT,IAAP;AACD;AACF,SARM;AADK,OAAd;AAWD,KApHmC;;AAAA,SAuHpCU,kBAvHoC,GAuHhBP,GAAD,IAAO;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKL,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAC,KAAKD,KAAL,CAAWC,KAAX,CAAiBgB,GAAjB,CAAsBN,IAAD,IAAQ;AACjC,cAAIA,IAAI,CAACC,EAAL,KAAYE,GAAG,CAACN,MAApB,EAA2B;AACzB,mBAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBR,IAAjB,EAAsB;AAC3BW,cAAAA,aAAa,EAAEX,IAAI,CAACW,aAAL,CAAmBZ,MAAnB,CAA0Ba,YAAY,IAAGA,YAAY,CAACX,EAAb,KAAoBE,GAAG,CAACU,cAAjE;AADY,aAAtB,CAAP;AAGD,WAJD,MAIK;AACH,mBAAOb,IAAP;AACD;AACF,SARK;AADM,OAAd;AAWD,KArImC;;AAAA,SAwIpCc,eAxIoC,GAwInBX,GAAD,IAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKL,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAC,KAAKD,KAAL,CAAWC,KAAX,CAAiBgB,GAAjB,CAAsBN,IAAD,IAAQ;AACjC,cAAIA,IAAI,CAACC,EAAL,KAAYE,GAAG,CAACN,MAApB,EAA2B;AACzB,mBAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBR,IAAjB,EAAsB;AAC3BW,cAAAA,aAAa,EAAEX,IAAI,CAACW,aAAL,CAAmBL,GAAnB,CAAwBM,YAAD,IAAgB;AACpD,oBAAIA,YAAY,CAACX,EAAb,IAAmBE,GAAG,CAACU,cAA3B,EAA0C;AACxC,yBAAON,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBI,YAAjB,EAA8B;AACnCG,oBAAAA,SAAS,EAAEH,YAAY,CAACG,SAAb,GAAuBZ,GAAG,CAACY;AADH,mBAA9B,CAAP;AAGD,iBAJD,MAIK;AACH,yBAAOH,YAAP;AACD;AACF,eARc;AADY,aAAtB,CAAP;AAWD,WAZD,MAYK;AACH,mBAAOZ,IAAP;AACD;AACF,SAhBK;AADM,OAAd;AAmBD,KA9JmC;;AAAA,SAgKpCgB,kBAhKoC,GAgKhBb,GAAD,IAAO;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKL,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAC,KAAKD,KAAL,CAAWC,KAAX,CAAiBgB,GAAjB,CAAsBN,IAAD,IAAQ;AACjC,cAAIA,IAAI,CAACC,EAAL,KAAYE,GAAG,CAACN,MAApB,EAA2B;AACzB,mBAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBR,IAAjB,EAAsB;AAC3BW,cAAAA,aAAa,EAAEX,IAAI,CAACW,aAAL,CAAmBL,GAAnB,CAAwBM,YAAD,IAAgB;AACpD,oBAAIA,YAAY,CAACX,EAAb,IAAmBE,GAAG,CAACU,cAA3B,EAA0C;AACxC,yBAAON,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBI,YAAjB,EAA8B;AACnCH,oBAAAA,KAAK,EAAEN,GAAG,CAACM,KADwB;AAEnCQ,oBAAAA,SAAS,EAAEd,GAAG,CAACc;AAFoB,mBAA9B,CAAP;AAID,iBALD,MAKK;AACH,yBAAOL,YAAP;AACD;AACF,eATc;AADY,aAAtB,CAAP;AAYD,WAbD,MAaK;AACH,mBAAOZ,IAAP;AACD;AACF,SAjBK;AADM,OAAd;AAoBD,KAvLmC;;AAAA,SAyLpCkB,YAzLoC,GAyLpBf,GAAD,IAAQ;AACrB,WAAKL,QAAL,CAAc;AACZP,QAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,GAAX,GAAe;AADR,OAAd;AAIA,YAAM4B,SAAS,GAAE;AACflB,QAAAA,EAAE,EAAEf,IAAI,EADO;AAEfuB,QAAAA,KAAK,EAAEN,GAAG,CAACM,KAFI;AAGfW,QAAAA,UAAU,EAACC,IAAI,CAACC,GAAL,EAHI;AAIfX,QAAAA,aAAa,EAAC;AAJC,OAAjB,CALqB,CAYrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAP,MAAAA,OAAO,CAACC,GAAR,CAAYc,SAAZ;AACAhC,MAAAA,KAAK,CAACoC,IAAN,CAAW,4CAAX,EAAwDJ,SAAxD,EACGK,IADH,CACQC,QAAQ,IAAErB,OAAO,CAACC,GAAR,CAAYoB,QAAZ,CADlB,EAEGD,IAFH,CAEQC,QAAQ,IAAE,KAAKC,QAAL,EAFlB,EAGGC,KAHH,CAGSC,KAAK,IAAExB,OAAO,CAACC,GAAR,CAAYuB,KAAZ,CAHhB;AAID,KAnNmC;;AAAA,SAuNpCC,eAvNoC,GAuNnB1B,GAAD,IAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB;AACA,WAAKS,QAAL,CAAc;AACZP,QAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,GAAX,GAAe;AADR,OAAd;AAIA,YAAMuC,eAAe,GAAG;AACtBjC,QAAAA,MAAM,EAAEM,GAAG,CAACN,MADU;AAEtBY,QAAAA,KAAK,EAAEN,GAAG,CAACM,KAFW;AAGtBQ,QAAAA,SAAS,EAAEd,GAAG,CAACc,SAHO;AAItBF,QAAAA,SAAS,EAAC;AAJY,OAAxB,CANqB,CAarB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA5B,MAAAA,KAAK,CAACoC,IAAN,CAAW,4CAAX,EAAwDO,eAAxD,EACGN,IADH,CACQC,QAAQ,IAAErB,OAAO,CAACC,GAAR,CAAYoB,QAAZ,CADlB,EAEGD,IAFH,CAEQC,QAAQ,IAAE,KAAKC,QAAL,EAFlB,EAGGC,KAHH,CAGSC,KAAK,IAAExB,OAAO,CAACC,GAAR,CAAYuB,KAAZ,CAHhB;AAID,KA1PmC;;AAAA,SA6PpCG,SA7PoC,GA6PxB5B,GAAD,IAAQ;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,WAAKP,QAAL,CAAc;AACZN,QAAAA,OAAO,EAAC,IADI;AAEZC,QAAAA,WAAW,EAACU,GAAG,CAACM,KAFJ;AAGZf,QAAAA,YAAY,EAACS,GAAG,CAACN,MAHL;AAIZF,QAAAA,oBAAoB,EAACQ,GAAG,CAACU;AAJb,OAAd;AAMH,KArQmC;;AAAA,SAuQpCmB,UAvQoC,GAuQxB,MAAI;AACd,WAAKlC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAC;AAAT,OAAd;AACD,KAzQmC;AAAA;;AAYpCkC,EAAAA,QAAQ,GAAI;AACVvC,IAAAA,KAAK,CAAC8C,GAAN,CAAU,oCAAV,EACCT,IADD,CACMC,QAAQ,IAAI;AAChB,WAAK3B,QAAL,CAAc;AAACR,QAAAA,KAAK,EAACmC,QAAQ,CAACS;AAAhB,OAAd;AACD,KAHD,EAICP,KAJD,CAIOC,KAAK,IAAE;AACZ,WAAK9B,QAAL,CAAc;AAAC8B,QAAAA,KAAK,EAAC;AAAP,OAAd;AACD,KAND,EAOCJ,IAPD,CAOMW,KAAK,IAAE;AACX/B,MAAAA,OAAO,CAACC,GAAR,CAAY8B,KAAZ,EAAkB,KAAK9C,KAAvB;AACD,KATD,EAUCmC,IAVD,CAUMY,CAAC,IAAE;AACPjD,MAAAA,KAAK,CAAC8C,GAAN,CAAU,4CAAV,EACCT,IADD,CACMC,QAAQ,IAAI;AAChB,aAAK3B,QAAL,CAAc;AACZR,UAAAA,KAAK,EAAC,KAAKD,KAAL,CAAWC,KAAX,CAAiBgB,GAAjB,CAAsBN,IAAD,IAAQ;AACjC,gBAAIqC,oBAAoB,GAAG,EAA3B;;AAGA,iBAAK,MAAMzB,YAAX,IAA2Ba,QAAQ,CAACS,IAApC,EAAyC;AAErC,kBAAIlC,IAAI,CAACC,EAAL,KAAYW,YAAY,CAACf,MAA7B,EAAoC;AAElCwC,gBAAAA,oBAAoB,CAACC,IAArB,CAA0B1B,YAA1B;AACD;AACJ;;AACD,kBAAM2B,OAAO,GAAGhC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBR,IAAjB,EAAsB;AACpCW,cAAAA,aAAa,EAAE0B;AADqB,aAAtB,CAAhB;AAGA,mBAAOE,OAAP;AACD,WAfK;AADM,SAAd;AAkBD,OApBD,EAqBCZ,KArBD,CAqBOC,KAAK,IAAE;AACZ,aAAK9B,QAAL,CAAc;AAAC8B,UAAAA,KAAK,EAAC;AAAP,SAAd;AACD,OAvBD,EAwBCJ,IAxBD,CAwBMW,KAAK,IAAE;AACX/B,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB,KAAKhB,KAA1B;AACD,OA1BD;AA2BD,KAtCD;AAuCD;;AAGDmD,EAAAA,iBAAiB,GAAI;AACnBrD,IAAAA,KAAK,CAAC8C,GAAN,CAAU,oCAAV,EACCT,IADD,CACMC,QAAQ,IAAI;AAChB,WAAK3B,QAAL,CAAc;AAACR,QAAAA,KAAK,EAACmC,QAAQ,CAACS;AAAhB,OAAd;AACD,KAHD,EAICP,KAJD,CAIOC,KAAK,IAAE;AACZ,WAAK9B,QAAL,CAAc;AAAC8B,QAAAA,KAAK,EAAC;AAAP,OAAd;AACD,KAND,EAOCJ,IAPD,CAOMW,KAAK,IAAE;AACX/B,MAAAA,OAAO,CAACC,GAAR,CAAY8B,KAAZ,EAAkB,KAAK9C,KAAvB;AAED,KAVD,EAWCmC,IAXD,CAWMY,CAAC,IAAE;AACPjD,MAAAA,KAAK,CAAC8C,GAAN,CAAU,4CAAV,EACCT,IADD,CACMC,QAAQ,IAAI;AAChB,aAAK3B,QAAL,CAAc;AACZR,UAAAA,KAAK,EAAC,KAAKD,KAAL,CAAWC,KAAX,CAAiBgB,GAAjB,CAAsBN,IAAD,IAAQ;AACjC,gBAAIqC,oBAAoB,GAAG,EAA3B;;AAEA,iBAAK,MAAMzB,YAAX,IAA2Ba,QAAQ,CAACS,IAApC,EAAyC;AACrC,kBAAIlC,IAAI,CAACC,EAAL,KAAYW,YAAY,CAACf,MAA7B,EAAoC;AAClCwC,gBAAAA,oBAAoB,CAACC,IAArB,CAA0B1B,YAA1B;AACD;AACJ;;AACD,kBAAM2B,OAAO,GAAGhC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBR,IAAjB,EAAsB;AACpCW,cAAAA,aAAa,EAAE0B;AADqB,aAAtB,CAAhB;AAGA,mBAAOE,OAAP;AACD,WAZK;AADM,SAAd;AAeD,OAjBD,EAkBCZ,KAlBD,CAkBOC,KAAK,IAAE;AACZ,aAAK9B,QAAL,CAAc;AAAC8B,UAAAA,KAAK,EAAC;AAAP,SAAd;AACD,OApBD,EAqBCJ,IArBD,CAqBMW,KAAK,IAAE;AACX/B,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB,KAAKhB,KAA1B;AACD,OAvBD;AAwBD,KApCD;AAqCD;;AA8KDoD,EAAAA,MAAM,GAAE;AACN,UAAMC,QAAQ,GAAE,CAAC,KAAKrD,KAAL,CAAWG,OAAZ,gBACd,QAAC,WAAD,OACM,KAAKH,KADX;AAEE,MAAA,UAAU,EAAE,KAAKO,UAFnB;AAGE,MAAA,UAAU,EAAE,KAAKM,UAHnB;AAIE,MAAA,kBAAkB,EAAE,KAAKQ,kBAJ3B;AAKE,MAAA,kBAAkB,EAAE,KAAKM,kBAL3B;AAME,MAAA,SAAS,EAAE,KAAKe,SANlB;AASE,MAAA,kBAAkB,EAAI,KAAKb,YAT7B;AAUE,MAAA,eAAe,EAAI,KAAKW;AAV1B;AAAA;AAAA;AAAA;AAAA,YADc,gBAad,QAAC,cAAD;AACE,MAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWI,WADpB;AAEE,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,YAFrB;AAGE,MAAA,cAAc,EAAE,KAAKL,KAAL,CAAWM,oBAH7B;AAIE,MAAA,UAAU,EAAE,KAAKqC,UAJnB;AAKE,MAAA,eAAe,EAAE,KAAKlB;AALxB;AAAA;AAAA;AAAA;AAAA,YAbF;AAqBA,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG4B,QAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAxSmC;;AA4StC,eAAetD,aAAf","sourcesContent":["import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport BranchTable from './Branch/BranchTable';\nimport ToggleableBranchForm from './Branch/ToggleableBranchForm';\n\nimport TimerDashboard from '../TimerDashboard/TimerDashboard'\nimport Header from '../Header/Header'\n\nimport Toolbar from '../Toolbar/Toolbar'\n\nimport { v4 as uuid } from \"uuid\";\n\nimport axios from 'axios';\nclass PlanDashboard extends Component {\n  state={\n    goals:[\n\n    ],\n    tmp:4,\n    timerOn:false,\n    activeTitle:0,\n    activeGoalId:0,\n    activeIntermediateId:0,\n  };\n\n  callback () {\n    axios.get('http://127.0.0.1:8000/api/v1/goal/')\n    .then(response => {\n      this.setState({goals:response.data});\n    })\n    .catch(error=>{\n      this.setState({error:true});\n    })\n    .then(value=>{\n      console.log(value,this.state);\n    })\n    .then(v=>{\n      axios.get('http://localhost:8000/api/v1/intermediate/')\n      .then(response => {\n        this.setState({\n          goals:this.state.goals.map((goal)=>{\n            let updatedIntermediates = []\n\n\n            for (const intermediate of response.data){\n\n                if (goal.id === intermediate.goalId){\n\n                  updatedIntermediates.push(intermediate);\n                }\n            }\n            const newGoal = Object.assign({},goal,{\n              intermediates: updatedIntermediates\n            });\n            return newGoal;\n          })\n        })\n      })\n      .catch(error=>{\n        this.setState({error:true});\n      })\n      .then(value=>{\n        console.log(\"second\",this.state);\n      })\n    })\n  }\n\n\n  componentDidMount () {\n    axios.get('http://127.0.0.1:8000/api/v1/goal/')\n    .then(response => {\n      this.setState({goals:response.data});\n    })\n    .catch(error=>{\n      this.setState({error:true});\n    })\n    .then(value=>{\n      console.log(value,this.state);\n\n    })\n    .then(v=>{\n      axios.get('http://localhost:8000/api/v1/intermediate/')\n      .then(response => {\n        this.setState({\n          goals:this.state.goals.map((goal)=>{\n            let updatedIntermediates = []\n\n            for (const intermediate of response.data){\n                if (goal.id === intermediate.goalId){\n                  updatedIntermediates.push(intermediate);\n                }\n            }\n            const newGoal = Object.assign({},goal,{\n              intermediates: updatedIntermediates\n            });\n            return newGoal;\n          })\n        })\n      })\n      .catch(error=>{\n        this.setState({error:true});\n      })\n      .then(value=>{\n        console.log(\"second\",this.state);\n      })\n    })\n  }\n\n\n  deleteGoal=(goalId)=>{\n    this.setState({\n      goals: this.state.goals.filter(goal => goal.id !== goalId)\n    });\n  };\n\n  updateGoal=(obj)=>{\n    console.log('updategoal')\n    console.log(obj)\n    this.setState({\n      goals: this.state.goals.map((goal)=>{\n        if (goal.id === obj.goalId){\n          return Object.assign({},goal,{\n            title:obj.title\n          });\n        }else{\n          return goal\n        }\n      })\n    });\n  }\n\n\n  deleteIntermediate=(obj)=>{\n    console.log('delete')\n    console.log(obj)\n    this.setState({\n      goals:this.state.goals.map((goal)=>{\n        if (goal.id === obj.goalId){\n          return Object.assign({},goal,{\n            intermediates: goal.intermediates.filter(intermediate=> intermediate.id !== obj.intermediateId)\n          });\n        }else{\n          return goal\n        }\n      })\n    });\n  };\n\n\n  updateTimeSpent=(obj)=>{\n    console.log('update timer')\n    console.log(obj)\n    this.setState({\n      goals:this.state.goals.map((goal)=>{\n        if (goal.id === obj.goalId){\n          return Object.assign({},goal,{\n            intermediates: goal.intermediates.map((intermediate)=>{\n              if (intermediate.id == obj.intermediateId){\n                return Object.assign({},intermediate,{\n                  timeSpent: intermediate.timeSpent+obj.timeSpent\n                });\n              }else{\n                return intermediate\n              }\n            })\n          });\n        }else{\n          return goal\n        }\n      })\n    });\n  };\n\n  updateIntermediate=(obj)=>{\n    console.log('update')\n    console.log(obj)\n    this.setState({\n      goals:this.state.goals.map((goal)=>{\n        if (goal.id === obj.goalId){\n          return Object.assign({},goal,{\n            intermediates: goal.intermediates.map((intermediate)=>{\n              if (intermediate.id == obj.intermediateId){\n                return Object.assign({},intermediate,{\n                  title: obj.title,\n                  totalTime: obj.totalTime\n                });\n              }else{\n                return intermediate\n              }\n            })\n          });\n        }else{\n          return goal\n        }\n      })\n    });\n  };\n\n  createBranch = (obj) =>{\n    this.setState({\n      tmp: this.state.tmp+1\n    });\n\n    const newBranch ={\n      id: uuid(),\n      title: obj.title,\n      created_at:Date.now(),\n      intermediates:[]\n    }\n\n    // this.setState({\n    //   goals:this.state.goals.concat({\n    //     id: uuid(),\n    //     title: obj.title,\n    //     created_at:Date.now(),\n    //     intermediates:[]\n    //   })\n    // });\n\n    console.log(newBranch)\n    axios.post(\"http://localhost:8000/api/v1/intermediate/\",newBranch)\n      .then(response=>console.log(response))\n      .then(response=>this.callback())\n      .catch(error=>console.log(error));\n  };\n\n\n\n  addIntermediate=(obj)=>{\n    console.log(this.state);\n    this.setState({\n      tmp: this.state.tmp+1\n    });\n\n    const newIntermediate = {\n      goalId: obj.goalId,\n      title: obj.title,\n      totalTime: obj.totalTime,\n      timeSpent:0,\n    }\n\n    // this.setState({\n    //   goals: this.state.goals.map((goal)=>{\n    //     if (goal.id === obj.goalId){\n    //       newIntermediate={\n    //         goalId: obj.goalId,\n    //         title: obj.title,\n    //         totalTime: obj.totalTime,\n    //         timeSpent:0,\n    //       }\n    //       return Object.assign({},goal,{\n    //         intermediates: goal.intermediates.concat(newIntermediate)\n    //       });\n    //     }else{\n    //       return goal;\n    //     }\n    //   })\n    // });\n\n    axios.post(\"http://localhost:8000/api/v1/intermediate/\",newIntermediate)\n      .then(response=>console.log(response))\n      .then(response=>this.callback())\n      .catch(error=>console.log(error));\n  }\n\n\n  openTimer =(obj) =>{\n      console.log('opentimer')\n      this.setState({\n        timerOn:true,\n        activeTitle:obj.title,\n        activeGoalId:obj.goalId,\n        activeIntermediateId:obj.intermediateId,\n      });\n  }\n\n  closeTimer =()=>{\n    this.setState({timerOn:false});\n  }\n\n  render(){\n    const toRender= !this.state.timerOn ?\n      <BranchTable\n        {...this.state}\n        deleteGoal={this.deleteGoal}\n        updateGoal={this.updateGoal}\n        deleteIntermediate={this.deleteIntermediate}\n        updateIntermediate={this.updateIntermediate}\n        openTimer={this.openTimer}\n\n\n        handleCreateBranch = {this.createBranch}\n        addIntermediate = {this.addIntermediate}\n      />:\n      <TimerDashboard\n        title={this.state.activeTitle}\n        goalId={this.state.activeGoalId}\n        intermediateId={this.state.activeIntermediateId}\n        closeTimer={this.closeTimer}\n        updateTimeSpent={this.updateTimeSpent}\n      />;\n\n    return(\n      <div className='ui container'>\n        <Header />\n        <Toolbar />\n        {toRender}\n      </div>\n    );\n  }\n}\n\n\nexport default PlanDashboard\n"]},"metadata":{},"sourceType":"module"}