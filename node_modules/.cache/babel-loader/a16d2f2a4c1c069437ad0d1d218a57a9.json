{"ast":null,"code":"var _jsxFileName = \"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport Input from '../UI/Input/Input';\nimport Button from '../UI/Button/Button';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport Toolbar from '../Toolbar/Toolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Email'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        },\n        password2: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Verify Password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      isSignup: false\n    };\n\n    this.checkValidity = (value, rules) => {\n      let isValid = true;\n\n      if (!rules) {\n        return true;\n      }\n\n      if (rules.required) {\n        isValid = value.trim() && isValid;\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid;\n      }\n\n      if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid;\n      }\n\n      return isValid;\n    };\n\n    this.inputChangedHandler = (event, controlName) => {\n      const updatedControls = { ...this.state.controls,\n        [controlName]: { ...this.state.controls[controlName],\n          value: event.target.value,\n          valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n          touched: true\n        }\n      };\n      this.setState({\n        controls: updatedControls\n      });\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      invalid: !formElement.config.valid,\n      shouldValidate: formElement.config.validation,\n      touched: formElement.config.touched,\n      changed: event => this.inputChangedHandler(event, formElement.id)\n    }, formElement.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui raised compact segment\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"ui form\",\n          onSubmit: this.submitHandler,\n          children: [form, /*#__PURE__*/_jsxDEV(Button, {\n            btnType: \"Success\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/Users/seongwookang/Projects/untitled/frontend/todo/src/components/Signup/Signup.js"],"names":["React","Component","Input","Button","PropTypes","Link","Redirect","Header","Toolbar","Signup","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","password2","isSignup","checkValidity","rules","isValid","trim","length","maxLength","pattern","test","isNumeric","inputChangedHandler","event","controlName","updatedControls","target","setState","render","formElementsArray","key","push","id","config","form","map","formElement","submitHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Input from '../UI/Input/Input';\nimport Button from '../UI/Button/Button';\n\nimport PropTypes from 'prop-types';\nimport { Link,Redirect } from 'react-router-dom';\n\nimport Header from '../Header/Header'\nimport Toolbar from '../Toolbar/Toolbar'\n\nclass Signup extends Component {\n  state={\n    controls:{\n      email:{\n        elementType: 'input',\n        elementConfig:{\n          type: 'email',\n          placeholder: 'Email'\n        },\n        value:'',\n        validation:{\n          required:true,\n          isEmail: true,\n        },\n        valid: false,\n        touched: false\n      },\n      password:{\n        elementType: 'input',\n        elementConfig:{\n          type: 'password',\n          placeholder: 'password'\n        },\n        value:'',\n        validation:{\n          required:true,\n          minLength:6,\n        },\n        valid: false,\n        touched: false,\n      },\n      password2:{\n        elementType: 'input',\n        elementConfig:{\n          type: 'password',\n          placeholder: 'Verify Password'\n        },\n        value:'',\n        validation:{\n          required:true,\n          minLength:6,\n        },\n        valid: false,\n        touched: false,\n      }\n    },\n    isSignup:false,\n  }\n\n  checkValidity=(value,rules)=>{\n    let isValid = true;\n\n    if ( !rules ) {\n      return true;\n    }\n\n    if (rules.required){\n      isValid = value.trim() && isValid;\n    }\n\n    if (rules.minLength){\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength){\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail){\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test( value ) && isValid\n    }\n\n    if (rules.isNumeric){\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value)&&isValid;\n    }\n    return isValid;\n  }\n\n  inputChangedHandler=(event, controlName)=>{\n    const updatedControls ={\n      ...this.state.controls,\n      [controlName]:{\n        ...this.state.controls.[controlName],\n        value: event.target.value,\n        valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n        touched:true\n      }\n    };\n\n    this.setState({controls: updatedControls});\n  }\n\n\n\n  render(){\n    const formElementsArray=[];\n    for ( let key in this.state.controls){\n      formElementsArray.push({\n        id:key,\n        config:this.state.controls[key],\n      });\n    }\n\n    let form = formElementsArray.map( formElement =>(\n      <Input\n          key={formElement.id}\n          elementType={formElement.config.elementType}\n          elementConfig={formElement.config.elementConfig}\n          value={formElement.config.value}\n          invalid={!formElement.config.valid}\n          shouldValidate={formElement.config.validation}\n          touched={formElement.config.touched}\n          changed={(event)=> this.inputChangedHandler(event, formElement.id)}\n      />\n    ));\n\n\n\n    return (\n      <div className='ui container'>\n        <Header />\n        <Toolbar />\n        <div className='ui raised compact segment'>\n\n          <form className='ui form' onSubmit={this.submitHandler}>\n            {form}\n            <Button\n              btnType='Success'>\n\n              Submit\n            </Button>\n          </form>\n\n\n        </div>\n      </div>\n\n\n    );\n  }\n}\nexport default Signup\n"]},"metadata":{},"sourceType":"module"}