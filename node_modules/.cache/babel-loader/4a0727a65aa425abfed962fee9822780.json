{"ast":null,"code":"var _jsxFileName = \"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Goal/editableGoal.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Goal from './Goal';\nimport GoalForm from './GoalForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditableGoal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false\n    };\n\n    this.handleCloseForm = () => {\n      this.closeForm();\n    };\n\n    this.handeOpenForm = () => {\n      this.openForm();\n    };\n\n    this.openForm = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n  }\n\n  render() {\n    const toRender = this.state.isOpen ? /*#__PURE__*/_jsxDEV(GoalForm, {\n      goalId: this.props.goalId,\n      title: this.props.title,\n      handleSubmit: this.props.updateGoal,\n      handleFormClose: this.handleCloseForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Goal, {\n      goalId: this.props.goalId,\n      title: this.props.title,\n      deleteGoal: this.props.deleteGoal,\n      openForm: this.handeOpenForm,\n      isEditing: this.props.isEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: toRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EditableGoal;","map":{"version":3,"sources":["/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Goal/editableGoal.js"],"names":["React","Component","PropTypes","Goal","GoalForm","EditableGoal","state","isOpen","handleCloseForm","closeForm","handeOpenForm","openForm","setState","render","toRender","props","goalId","title","updateGoal","deleteGoal","isEditing"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCK,KADmC,GAC7B;AACJC,MAAAA,MAAM,EAAC;AADH,KAD6B;;AAAA,SAKnCC,eALmC,GAKnB,MAAI;AAClB,WAAKC,SAAL;AACD,KAPkC;;AAAA,SASnCC,aATmC,GASrB,MAAI;AAChB,WAAKC,QAAL;AACD,KAXkC;;AAAA,SAanCA,QAbmC,GAazB,MAAI;AACZ,WAAKC,QAAL,CAAc;AAACL,QAAAA,MAAM,EAAC;AAAR,OAAd;AACD,KAfkC;;AAAA,SAiBnCE,SAjBmC,GAiBzB,MAAI;AACZ,WAAKG,QAAL,CAAc;AAACL,QAAAA,MAAM,EAAC;AAAR,OAAd;AACD,KAnBkC;AAAA;;AAsBnCM,EAAAA,MAAM,GAAE;AAGN,UAAMC,QAAQ,GAAE,KAAKR,KAAL,CAAWC,MAAX,gBACd,QAAC,QAAD;AACE,MAAA,MAAM,EAAE,KAAKQ,KAAL,CAAWC,MADrB;AAEE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFpB;AAGE,MAAA,YAAY,EAAE,KAAKF,KAAL,CAAWG,UAH3B;AAIE,MAAA,eAAe,EAAE,KAAKV;AAJxB;AAAA;AAAA;AAAA;AAAA,YADc,gBAQd,QAAC,IAAD;AACE,MAAA,MAAM,EAAE,KAAKO,KAAL,CAAWC,MADrB;AAEE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFpB;AAGE,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWI,UAHzB;AAIE,MAAA,QAAQ,EAAE,KAAKT,aAJjB;AAKE,MAAA,SAAS,EAAE,KAAKK,KAAL,CAAWK;AALxB;AAAA;AAAA;AAAA;AAAA,YARF;AAgBA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,gBACGN;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA9CkC;;AAkDrC,eAAeT,YAAf","sourcesContent":["import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Goal from './Goal'\nimport GoalForm from './GoalForm'\n\nclass EditableGoal extends Component {\n  state={\n    isOpen:false\n  }\n\n  handleCloseForm=()=>{\n    this.closeForm();\n  }\n\n  handeOpenForm=()=>{\n    this.openForm();\n  }\n\n  openForm =()=>{\n    this.setState({isOpen:true});\n  }\n\n  closeForm=()=>{\n    this.setState({isOpen:false});\n  }\n\n\n  render(){\n\n\n    const toRender= this.state.isOpen ?\n      <GoalForm\n        goalId={this.props.goalId}\n        title={this.props.title}\n        handleSubmit={this.props.updateGoal}\n        handleFormClose={this.handleCloseForm}\n      />:\n\n      <Goal\n        goalId={this.props.goalId}\n        title={this.props.title}\n        deleteGoal={this.props.deleteGoal}\n        openForm={this.handeOpenForm}\n        isEditing={this.props.isEditing}\n\n      />\n    return(\n      <React.Fragment>\n        {toRender}\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default EditableGoal;\n"]},"metadata":{},"sourceType":"module"}