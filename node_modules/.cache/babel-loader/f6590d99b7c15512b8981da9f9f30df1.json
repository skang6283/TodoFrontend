{"ast":null,"code":"var _jsxFileName = \"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/TimerDashboard/Timer/Timer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { renderRemainingString, millisecondsToHuman } from './timerHelper';\nimport TimerButtons from '../TimerButtons/TimerButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      total: 3000,\n      elapsed: 0,\n      isStarted: false,\n      title: 'this.props.title',\n      goalId: this.props.goalId,\n      intermediateId: this.props.intermediateId\n    };\n\n    this.componentDidMount = () => {\n      document.addEventListener(\"keydown\", this.handleArrowKeyDown);\n      this.forceUpdateInterval = setInterval(() => this.forceUpdate(), 50);\n    };\n\n    this.componentWillUnmount = () => {\n      document.removeEventListener('keydown', this.handleArrowKeyDown);\n      clearInterval(this.forceUpdateInterval);\n    };\n\n    this.handleArrowKeyDown = e => {\n      switch (e.keyCode) {\n        case 38:\n          //up\n          this.increase5Min();\n          break;\n\n        case 40:\n          //down\n          this.decrease5Min();\n          break;\n\n        case 13:\n          //enter\n          this.startTimer();\n          break;\n\n        case 32:\n          //spac\n          console.log('space');\n          this.stopTimer();\n          break;\n      }\n    };\n\n    this.increase5Min = () => {\n      if (!this.state.isStarted) {\n        this.setState({\n          total: this.state.total + 300000\n        });\n      }\n    };\n\n    this.decrease5Min = () => {\n      if (!this.state.isStarted) {\n        if (this.state.total - 300000 >= 600000) {\n          this.setState({\n            total: this.state.total - 300000\n          });\n        } else {\n          this.setState({\n            total: 600000\n          });\n        }\n      }\n    };\n\n    this.startTimer = () => {\n      if (!this.state.isStarted) {\n        this.setState({\n          runningSince: Date.now(),\n          isStarted: true\n        });\n      }\n    };\n\n    this.cancelTimer = () => {\n      this.setState(prevState => {\n        return {\n          total: prevState.total,\n          isCompleted: false,\n          elapsed: 0,\n          isStarted: false\n        };\n      });\n    };\n\n    this.handleTimerDone = () => {\n      console.log('handletimer done');\n      this.setState({\n        isStarted: false\n      });\n      this.props.updateTimeSpent({\n        timeSpent: this.state.total,\n        goalId: this.state.goalId,\n        intermediateId: this.state.intermediateId\n      });\n    };\n  }\n\n  render() {\n    const remaining = this.state.isStarted ? renderRemainingString(this.state.elapsed, this.state.runningSince, this.state.total) : millisecondsToHuman(this.state.total - this.state.elapsed);\n\n    if (remaining === '00:00:00' & !this.state.isCompleted) {\n      this.handleTimerDone();\n    }\n\n    const rem = Date.now() - this.state.runningSince;\n    let button = null;\n\n    if (!this.state.isStarted) {\n      button = /*#__PURE__*/_jsxDEV(TimerButtons, {\n        onButtonClick: this.startTimer,\n        onBackCilick: this.props.closeTimer,\n        label: 'start',\n        isStarted: this.state.isStarted,\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this);\n    } else {\n      button = rem < 10000 ? /*#__PURE__*/_jsxDEV(TimerButtons, {\n        onButtonClick: this.cancelTimer,\n        onBackCilick: this.props.closeTimer,\n        label: 'Cancel Within',\n        isStarted: this.state.isStarted,\n        color: \"red\",\n        rem: rem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }, this) : null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui two column centered grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: \"100px\",\n            textAlign: \"center\"\n          },\n          children: remaining\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), button]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/seongwookang/Projects/untitled/frontend/todo/src/components/TimerDashboard/Timer/Timer.js"],"names":["React","Component","PropTypes","renderRemainingString","millisecondsToHuman","TimerButtons","Timer","state","total","elapsed","isStarted","title","goalId","props","intermediateId","componentDidMount","document","addEventListener","handleArrowKeyDown","forceUpdateInterval","setInterval","forceUpdate","componentWillUnmount","removeEventListener","clearInterval","e","keyCode","increase5Min","decrease5Min","startTimer","console","log","stopTimer","setState","runningSince","Date","now","cancelTimer","prevState","isCompleted","handleTimerDone","updateTimeSpent","timeSpent","render","remaining","rem","button","closeTimer","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { renderRemainingString,millisecondsToHuman } from './timerHelper'\n\nimport TimerButtons from '../TimerButtons/TimerButtons'\n\nclass Timer extends Component {\n  state={\n    total: 3000,\n    elapsed:0,\n    isStarted:false,\n\n    title:'this.props.title',\n    goalId: this.props.goalId,\n    intermediateId: this.props.intermediateId\n  }\n\n  componentDidMount =()=>{\n    document.addEventListener(\"keydown\", this.handleArrowKeyDown);\n    this.forceUpdateInterval = setInterval(() => this.forceUpdate(), 50);\n  }\n\n  componentWillUnmount =()=>{\n    document.removeEventListener('keydown',this.handleArrowKeyDown);\n    clearInterval(this.forceUpdateInterval);\n  }\n\n  handleArrowKeyDown=(e)=>{\n    switch (e.keyCode) {\n        case 38: //up\n          this.increase5Min();\n          break;\n        case 40: //down\n          this.decrease5Min();\n          break;\n        case 13: //enter\n          this.startTimer();\n          break;\n        case 32: //spac\n          console.log('space')\n          this.stopTimer();\n          break;\n    }\n  }\n\n  increase5Min=()=>{\n    if (!this.state.isStarted){\n        this.setState({total:this.state.total+300000});\n    }\n  }\n\n  decrease5Min=()=>{\n    if (!this.state.isStarted){\n      if ((this.state.total-300000) >= 600000){\n          this.setState({total:this.state.total-300000});\n      }else{\n        this.setState({total:600000});\n      }\n    }\n\n  }\n\n  startTimer=()=>{\n    if(!this.state.isStarted){\n      this.setState({\n        runningSince:Date.now(),\n        isStarted:true,\n      });\n    }\n  }\n\n  cancelTimer = () =>{\n    this.setState((prevState)=>{\n      return {\n        total: prevState.total,\n        isCompleted:false,\n        elapsed:0,\n        isStarted:false,\n      }\n    });\n  }\n\n\n  handleTimerDone=()=>{\n    console.log('handletimer done')\n\n    this.setState({isStarted:false});\n    this.props.updateTimeSpent({\n      timeSpent:this.state.total,\n      goalId: this.state.goalId,\n      intermediateId: this.state.intermediateId\n    })\n  }\n\n\n  render(){\n    const remaining = this.state.isStarted ? renderRemainingString(\n          this.state.elapsed, this.state.runningSince, this.state.total\n        ) : millisecondsToHuman(this.state.total - this.state.elapsed);\n\n    if (remaining === '00:00:00' & !this.state.isCompleted){\n      this.handleTimerDone()\n    }\n\n\n\n    const rem = Date.now() - this.state.runningSince;\n\n    let button = null;\n    if (!this.state.isStarted){\n      button =  <TimerButtons\n        onButtonClick={this.startTimer}\n        onBackCilick={this.props.closeTimer}\n\n        label = {'start'}\n        isStarted={this.state.isStarted}\n        color = {\"green\"}\n      />\n    } else {\n      button = (rem) < 10000 ?  <TimerButtons\n        onButtonClick={this.cancelTimer}\n        onBackCilick={this.props.closeTimer}\n\n        label = {'Cancel Within'}\n        isStarted={this.state.isStarted}\n        color = {\"red\"}\n        rem={rem}\n      />: null;\n    }\n\n    return(\n      <div className='ui two column centered grid'\n      >\n        <div className='column'>\n          <h1\n            style={{fontSize:\"100px\", textAlign:\"center\"}}\n          >\n            {remaining}\n          </h1>\n          {button}\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}