{"ast":null,"code":"var _jsxFileName = \"/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/ToggleableIntermediateForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport IntermediateForm from './IntermediateForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ToggleableIntermediateForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isClicked: false\n    };\n\n    this.handleFormOpen = () => {\n      this.setState({\n        isClicked: true\n      });\n    };\n\n    this.handleFormClose = () => {\n      this.setState({\n        isClicked: false\n      });\n    };\n  }\n\n  render() {\n    const toRender = this.state.isClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(IntermediateForm, {\n        Id: this.props.Id,\n        goalId: this.props.goalId,\n        handleFormClose: this.handleFormClose,\n        handleSubmit: this.props.addIntermediate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui basic segment center aligned\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"large plus square outline icon\",\n        onClick: this.handleFormOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui column\",\n      children: toRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ToggleableIntermediateForm;","map":{"version":3,"sources":["/Users/seongwookang/Projects/untitled/frontend/todo/src/components/PlanDashboard/Branch/Intermediates/ToggleableIntermediateForm.js"],"names":["React","Component","PropTypes","IntermediateForm","ToggleableIntermediateForm","state","isClicked","handleFormOpen","setState","handleFormClose","render","toRender","props","Id","goalId","addIntermediate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAGA,MAAMC,0BAAN,SAAyCH,SAAzC,CAAkD;AAAA;AAAA;AAAA,SAChDI,KADgD,GAC1C;AACJC,MAAAA,SAAS,EAAC;AADN,KAD0C;;AAAA,SAKhDC,cALgD,GAKhC,MAAI;AAClB,WAAKC,QAAL,CAAc;AAACF,QAAAA,SAAS,EAAC;AAAX,OAAd;AACD,KAP+C;;AAAA,SAQhDG,eARgD,GAQhC,MAAI;AAClB,WAAKD,QAAL,CAAc;AAACF,QAAAA,SAAS,EAAC;AAAX,OAAd;AACD,KAV+C;AAAA;;AAahDI,EAAAA,MAAM,GAAE;AACJ,UAAMC,QAAQ,GAAE,KAAKN,KAAL,CAAWC,SAAX,gBACV;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,EAAE,EAAE,KAAKM,KAAL,CAAWC,EADjB;AAEE,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAFrB;AAGE,QAAA,eAAe,EAAE,KAAKL,eAHxB;AAIE,QAAA,YAAY,EAAE,KAAKG,KAAL,CAAWG;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADU,gBASV;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,gCADZ;AAEE,QAAA,OAAO,EAAE,KAAKR;AAFhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATN;AAeA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGI;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAlC6C;;AAqClD,eAAeP,0BAAf","sourcesContent":["import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport IntermediateForm from './IntermediateForm'\n\n\nclass ToggleableIntermediateForm extends Component{\n  state={\n    isClicked:false,\n  }\n\n  handleFormOpen =()=>{\n    this.setState({isClicked:true});\n  }\n  handleFormClose=()=>{\n    this.setState({isClicked:false});\n  }\n\n\n  render(){\n      const toRender= this.state.isClicked ?\n            <div>\n              <IntermediateForm\n                Id={this.props.Id}\n                goalId={this.props.goalId}\n                handleFormClose={this.handleFormClose}\n                handleSubmit={this.props.addIntermediate}\n                />\n            </div>:\n            <div className='ui basic segment center aligned'>\n              <i\n                className=\"large plus square outline icon\"\n                onClick={this.handleFormOpen}\n                />\n            </div>\n      return(\n        <div className='ui column'>\n          {toRender}\n        </div>\n      );\n    }\n  }\n\nexport default ToggleableIntermediateForm;\n"]},"metadata":{},"sourceType":"module"}